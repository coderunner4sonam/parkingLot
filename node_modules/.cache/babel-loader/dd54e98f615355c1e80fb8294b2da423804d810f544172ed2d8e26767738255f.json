{"ast":null,"code":"const intialState = {\n  parkingLot: []\n};\nfunction actionReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : intialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"PARKING_ALLOCATION\":\n      let newparkinglot = [...state.parkingLot];\n      newparkinglot.push(action.payload);\n      return {\n        ...state,\n        parkingLot: newparkinglot\n      };\n    default:\n      return state;\n  }\n}\nexport default actionReducer;","map":{"version":3,"names":["intialState","parkingLot","actionReducer","state","arguments","length","undefined","action","type","newparkinglot","push","payload"],"sources":["C:/Users/asus/Desktop/practiseproject/src/redux/actionReducer.js"],"sourcesContent":["const intialState={\r\n    parkingLot:[]\r\n}\r\n\r\nfunction actionReducer (state=intialState,action){\r\n    switch(action.type){\r\n        case \"PARKING_ALLOCATION\" :\r\n            let newparkinglot=[...state.parkingLot];\r\n            newparkinglot.push(action.payload); \r\n                \r\n            return {\r\n                ...state, parkingLot:newparkinglot\r\n            }\r\n        default :\r\n           return state\r\n           \r\n    }\r\n}\r\nexport default actionReducer;\r\n"],"mappings":"AAAA,MAAMA,WAAW,GAAC;EACdC,UAAU,EAAC;AACf,CAAC;AAED,SAASC,aAAaA,CAAA,EAA2B;EAAA,IAAzBC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAACJ,WAAW;EAAA,IAACO,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC5C,QAAOC,MAAM,CAACC,IAAI;IACd,KAAK,oBAAoB;MACrB,IAAIC,aAAa,GAAC,CAAC,GAAGN,KAAK,CAACF,UAAU,CAAC;MACvCQ,aAAa,CAACC,IAAI,CAACH,MAAM,CAACI,OAAO,CAAC;MAElC,OAAO;QACH,GAAGR,KAAK;QAAEF,UAAU,EAACQ;MACzB,CAAC;IACL;MACG,OAAON,KAAK;EAAA;AAGvB;AACA,eAAeD,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}